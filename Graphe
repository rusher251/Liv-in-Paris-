 public class Graphe<T>
    {
        public List<Noeud<T>> Sommets { get; set; }
        public Dictionary<T, Noeud<T>> DictionnaireNoeuds { get; set; }

        public Graphe()
        {
            Sommets = new List<Noeud<T>>();
            DictionnaireNoeuds = new Dictionary<T, Noeud<T>>();
        }

        public void AjouterNoeud(T valeur)
        {
            if (!DictionnaireNoeuds.ContainsKey(valeur))
            {
                Noeud<T> noeud = new Noeud<T>(valeur);
                Sommets.Add(noeud);
                DictionnaireNoeuds[valeur] = noeud;
            }
        }

        public void AjouterLien(T source, T destination, double poids)
        {
            if (DictionnaireNoeuds.ContainsKey(source) && DictionnaireNoeuds.ContainsKey(destination))
            {
                Noeud<T> noeudSource = DictionnaireNoeuds[source];
                Noeud<T> noeudDestination = DictionnaireNoeuds[destination];
                noeudSource.Liens.Add(new Lien<T>(noeudDestination, poids));
            }
        }
    }
